STATEMENT
You are given an even integer NN and an integer KK.
Generate an array AA of size NN such that:
    1≤Ai≤10^5  for all 1≤i≤N;
    The number of odd elements in the array is same as the number of even elements.
    The sum of all elements of the array is KK.
If multiple such arrays exist, print any. If no such array exists, print −1−1 instead.

SOLUTION
#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define int long long
const int mod = 1e9 + 7;

void solve()
{
    int n, k;
    cin>>n>>k;

    vector<int>ans(n+1);
    //ans[0]=0;
    for(int i=1; i<=n; i++)
    {
        if(i%2)
        {
            ans[i]=1;
        }
        else
        {
            ans[i]=2;
        }
    }
    int req=k-accumulate(ans.begin(), ans.end(), 0LL);

    if(req<0 || req%2)
    {
        cout<<-1<<endl;
        return;
    }

//    for(int i=1;i<=n;i++)
//    {
//        cout<<ans[i]<<" ";
//    }
//    cout<<endl;

    for(int i=1; i<=n; i++)
    {
        int add=req;
        add=min(100000-ans[i], add);
        add-=(add%2);
        ans[i]+=add;
        req-=add;

    }
    if(req)
    {
        cout<<-1<<endl;
        return;
    }

    for(int i=1; i<=n; i++)
    {
        cout<<ans[i]<<" ";
    }
    cout<<endl;
}

signed main()
{
    int test = 1;
    cin >> test;
    for (int t = 1; t <= test; t++)
    {
        solve();
    }
    return 0;
}
